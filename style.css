/* You didn’t implement a functional hamburger menu. */
/* You haven’t used any media queries so your project is not responsive. */
/* Great job on using CSS variables! */
:root {
    background-color: #E5E5E5;
    color: var(--color-text-one);
    font-family: Roboto, sans-serif;

    /* -- VARS FOR THEME -- */
    --color-one: #000;
    --color-two: #646464;
    --accent: #febd2f;
    --outline: #dcdcdc;
}

/* Great work on being detailed oriented and adding the right fonts to each component of the website. */
/* -- BODY STYLE -- */
h1,
h2,
h3 {
    font-family: "Roboto Serif", serif;
    font-weight: medium;
}

h1 {
    font-size: 64px;
}

h2 {
    font-size: 40px;
}

h3 {
    font-size: 24px;
    font-weight: bold;
}

/* Nice work on giving a % value to the width of the image! It is responsive! */
img {
    width: 100%;
}

.p1 {
    font-size: 24px;
}

.p2 {
    font-size: 18px;
}

.button1,
.button2 {
    font-weight: medium;
}

.button1 {
    border: 0;
    border-radius: 32px;
    background-color: #000;
    color: #fff;
    font-size: 18px;
    text-align: center;
    padding: 8px 16px;
}

.button1-reverse {
    border: 1px solid var(--color-two);
    border-radius: 32px;
    background-color: #fff;
    color: #000;
    font-size: 18px;
    text-align: center;
    padding: 8px 16px;
}

/* ^^^ */
/* I THINK THIS WAS SUPPOSED TO BE WHAT I DID ABOVE */
.button2 {
    font-size: 16px;
}

/* -- LAYOUT STYLE -- */
/* Superb! You’ve used grid template areas correctly! */
/* 5 rows */
.grid-container {
    display: grid;
    grid-template-rows: 50px 1fr 1fr 50px;
    grid-template-columns: 1fr 1fr;
    grid-template-areas:
        "navBar navBar"
        "hero hero"
        "card-container card-container"
        "footer footer";
}

/* Beautiful work on using CSS Grid and flex box together! */
.navBar {
    /* background-color: red; */
    grid-area: navBar;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 32px 32px;
}

.navBar ul li {
    display: inline;
    /* margin: 8px 16px;
    padding: 8px 16px; */
}

.navBar ul {
    list-style-type: none;
    padding: 0;
}

.navBar a {
    text-decoration: none;
    color: var(--color-one);
    font-family: "Roboto", sans-serif;
    font-size: 16px;
    font-weight: 700;
}

/* -- HERO LAYOUT -- */
/* Nice work on using Flexbox properly to create some of the components. */
.hero {
    /* background-color: orange; */
    margin: 0 32px;
    width: 100%;
    grid-area: hero;
    display: flex;
    justify-content: space-between;
    align-items: space-between;
}

.hero-text {
    /* background-color: violet; */
    flex: 0 1 auto;
}

.hero-img {
    flex: 1 0 50%;
    align-self: center;
}

/* -- CARD LAYOUT -- */
.card-container {
    /* background-color: yellow; */
    grid-area: card-container;
    margin: 0 32px;
}

.card-row {
    display: flex;
    justify-content: space-between;
}

.card {
    background-color: #fff;
    flex: 0 0 auto;
    border-radius: 32px;
    width: 250px;
    height: 250px;
    padding: 32px;
    margin: 16px;
}

/* CANT GET THIS TEXT TO LINE UP LIKE FIGMA */
.card-accent {
    background-color: var(--accent);
}

/* Even-though it looks like you achieved placing the logo above the card, it is not the proper way.
You should give the icon a position of absolute, this will bring the icon out of the document flow.
Then you need to give the card a position of relative in order for the icon to be placed in relative to the card. */
.card img {
    width: 64px;
    position: relative;
    bottom: 60px;
    float: right;
    clear: right;
}

/* -- FOOTER LAYOUT -- */

/* CAN'T GET RID OF THIN WHITE LINE AT BOTTOM ??? */
.footer {
    background-color: var(--accent);
    grid-area: footer;
    display: flex;
    justify-content: center;
    padding-top: 8px;
}

.footer div {
    flex: 0 0 auto;
    align-self: center;
}